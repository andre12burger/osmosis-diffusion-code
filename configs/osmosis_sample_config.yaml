# saving directory
save_dir: .\results

degamma_input: False # use it for not linear haze image
manual_seed: 0
check_prior: False

# for **check prior** option you need to set few things:
# 1. check_prior: True
# 2. save_differences: False
# 3. conditioning: method: ps
# 4. conditioning: params: scale: number,number,number,0
# 5. measurement: operator: name: noise

save_singles: True # single reference, restored RGB and depth estimation
save_grids: True
text_on_results: True
record_process: True
record_every: 200

# change unet input and output
change_input_output_channels: True
input_channels: 4  # RGBD
output_channels: 8  # RGBD * 2 - learning sigma = True, if False 4

# gibbsDDRM sampling method - the names borrowed from their paper
sample_pattern:

  pattern: pcgs  # original, pcgs - from gibbsDDRM

  # relevant only for "pattern: pcgs"

  # update phi's
  update_start: 0.7
  update_end: 0

  # repeat several times the T steps
  global_N: 1
  # iterative between update x_t and optimizing phis for the same t - time step
  local_M: 1
  s_start: 1
  s_end: 0

  # for each t step, the number of optimization steps for beats and B_inf
  n_iter: 20

  # PGDiff - when to guide? no guidance at all not tin the range
  start_guidance: 1
  stop_guidance: 0


# unet model configurations
unet_model:
  image_size: 256
  num_channels: 256
  num_res_blocks: 2
  channel_mult: ""
  learn_sigma: True
  class_cond: False
  use_checkpoint: False
  attention_resolutions: 32, 16, 8
  num_heads: 4
  num_head_channels: 64
  num_heads_upsample: -1
  use_scale_shift_norm: True
  dropout: 0.0
  resblock_updown: True
  use_fp16: False
  use_new_attention_order: False

  # pretrained model
  model_path: .\models\osmosis_outdoor.pt
  pretrain_model: osmosis  # osmosis, imagenet

# diffusion configurations
diffusion:
  sampler: ddpm
  steps: 1000
  noise_schedule: linear # linear, cosine
  model_mean_type: epsilon
  model_var_type: learned_range

  dynamic_threshold: False
  clip_denoised: False
  min_max_denoised: False

  rescale_timesteps: False
  timestep_respacing: 1000

# task configurations
conditioning:
  method: osmosis # osmosis # gdp_pattern_diff_loss # gdp_pattern # ps - for checking the prior
  params:
    loss_function: norm # norm, mse
    # if "none" so the rest has no meaning
    loss_weight: depth # none, depth
    weight_function: gamma,1.4,1.4,1 # function, value

    # relevant only when --> method: gdp_pattern_diff_loss. # if "none" so the rest has no meaning
    loss_weight_diff: depth # none, raw_nerf, inverse_depth, depth, depth_mask_large
    weight_function_diff: gamma,1.4,1.4,1. # function, value
    diff_vars: beta_a # beta_a,beta_b,b_inf

    # when measurement operator is not underwater - set scale for depth to 0 (vR,vG,vB,vD=0)
    scale: 7,7,7,0.9 # 4,4,4,1 # 7,7,7,0.9
    gradient_x_prev: True # if False - the graidient of the forward degradation is according x_0_pred
    scale_norm: original # original, depth, pgdiff, pgdiff_color, grad_norm, grad_abs, grad_abs_norm

    gradient_clip: True,0.001,0.005

# specify the loss and its weight/scale, if not specified so no auxiliary loss
aux_loss:
  aux_loss:
    avrg_loss: 0.5 # 0.5
    val_loss: 20 # 20

data:
  batch_size: 1
  ground_truth: False

#  name: simulation
#  root: D:\master\comparison\osmosis_uw_sim\data\simulation
#  stop_after: -1 # -1

  name: haze_dana
  root: D:\datasets\images_samples\haze_dana
  stop_after: -1

#  name: osmosis_lin_wb
#  root: D:\datasets\images_samples\osmosis_uw_dataset_lin_wb_subset
#  stop_after: -1 #

measurement:
  operator:

    name: underwater_physical_revised # underwater_physical_revised, haze_physical, noise (for check prior)

    optimizer: sgd # GD, adam, sgd
    degamma: False # True/False

    # does not matter for not underwater
    depth_type: gamma # original [0,1], contraction, move, min_max, gamma=((x+value[0])*value[1])^value[2]
    value: 1.4,1.4,1 # 1.4,1.2,1 # it should be float in case of move and two numbers in case of min-max (0.6, 2)

    # underwater_physical
    phi_a: 1.1,0.95,0.95
    phi_a_eta: 1e-5
    phi_a_learn_flag: True

    # underwater_physical
    phi_b: 0.95, 0.8, 0.8
    phi_b_eta: 1e-5
    phi_b_learn_flag: True

    # underwater_physical, haze_physical
    phi_inf: 0.14, 0.29, 0.49
    phi_inf_eta: 1e-5
    phi_inf_learn_flag: True

    # haze_physical
#    phi_ab: 1.3,1.2,0.9
#    phi_ab_eta: 1e-5
#    phi_ab_learn_flag: True

  noise:
    name: clean # clean - osmosis, gaussian - ps
    # sigma: 0.001 # gaussian - ps



